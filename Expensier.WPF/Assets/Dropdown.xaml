<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">


    <!--#region DropDown-->
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Margin="0,8,0,0"
                        Padding="4"
                        Background="{StaticResource Primary}"
                        BorderBrush="{StaticResource Transparent}"
                        BorderThickness="1.5"
                        CornerRadius="10">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource DropDownButtonTemplate}">
                <ToggleButton.Tag>
                    <x:Array Type="DrawingImage">
                        <DrawingImage Drawing="{StaticResource ChevronDownVector}" />
                        <DrawingImage Drawing="{StaticResource ChevronUpVector}" />
                    </x:Array>
                </ToggleButton.Tag>
            </ToggleButton>
            <ContentPresenter
                x:Name="contentPresenter"
                Margin="16,0,0,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="Center"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextElement.FontFamily="{StaticResource Lato}"
                TextElement.FontSize="14"
                TextElement.FontWeight="Regular"
                TextElement.Foreground="{StaticResource ForegroundShade}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="8,0,8,8" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DropDownButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Glow"
                        Margin="-4"
                        BorderThickness="4"
                        CornerRadius="14">
                        <Border
                            x:Name="Stroke"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Background="{StaticResource MenuShade}"
                            BorderBrush="{StaticResource MenuShade}"
                            BorderThickness="1.5"
                            CornerRadius="12"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="16" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Column="1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextElement.Foreground="{StaticResource Foreground}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                                <Image
                                    x:Name="Icon"
                                    Grid.Column="3"
                                    Width="14"
                                    Height="14"
                                    Opacity="0.75"
                                    Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Glow" Property="BorderBrush" Value="{StaticResource SecondaryShade}" />
                            <Setter TargetName="Stroke" Property="Background" Value="{StaticResource Primary}" />
                            <Setter TargetName="Stroke" Property="BorderBrush" Value="{StaticResource Secondary}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{StaticResource Secondary}" />
                            <Setter TargetName="Icon" Property="Source" Value="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownItemsTemplate" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontFamily" Value="{StaticResource Lato}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="{StaticResource Foreground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Border"
                        Padding="8"
                        Background="{StaticResource Primary}"
                        CornerRadius="8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" />
                            <Viewbox Grid.Column="2">
                                <Grid>
                                    <Path
                                        x:Name="CheckMark1"
                                        Data="M7.00002 12.8333C10.2218 12.8333 12.8334 10.2217 12.8334 6.99996C12.8334 3.77821 10.2218 1.16663 7.00002 1.16663C3.77827 1.16663 1.16669 3.77821 1.16669 6.99996C1.16669 10.2217 3.77827 12.8333 7.00002 12.8333Z"
                                        Fill="{StaticResource Secondary}"
                                        Opacity="0.2"
                                        Visibility="Collapsed" />
                                    <Path
                                        x:Name="CheckMark2"
                                        Data="M6.17165 9.08949C6.05566 9.08939 5.94445 9.04323 5.86248 8.96116L4.21165 7.31032C4.13028 7.22799 4.08466 7.11691 4.08466 7.00116C4.08466 6.8854 4.13028 6.77432 4.21165 6.69199C4.38081 6.52282 4.66081 6.52282 4.82998 6.69199L6.17165 8.03366L9.16998 5.03532C9.33915 4.86616 9.61915 4.86616 9.78832 5.03532C9.95748 5.20449 9.95748 5.48449 9.78832 5.65366L6.48081 8.96116C6.39885 9.04323 6.28764 9.08939 6.17165 9.08949Z"
                                        Fill="{StaticResource Secondary}"
                                        Visibility="Collapsed" />
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryShade}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource Secondary}" />
                        </Trigger>
                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Primary}" />
                            <Setter TargetName="Border" Property="TextElement.Foreground" Value="{StaticResource Secondary}" />
                            <Setter TargetName="CheckMark1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckMark2" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownTemplate" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{StaticResource Primary}" />
        <Setter Property="BorderBrush" Value="{StaticResource Primary}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers />
    </Style>
    <!--#endregion-->


    <!--#region Sort Menu-->
    <ControlTemplate x:Key="SortDropdownTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup
                x:Name="PART_Popup"
                Grid.ColumnSpan="2"
                AllowsTransparency="true"
                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Placement="Bottom"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome
                    x:Name="shadow"
                    MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    Color="Transparent">
                    <Border
                        x:Name="dropDownBorder"
                        Padding="4"
                        Background="{StaticResource Primary}"
                        BorderBrush="{StaticResource Transparent}"
                        BorderThickness="1.5"
                        CornerRadius="12">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    x:Name="canvas"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="opaqueRect"
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                        Fill="{Binding Background, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton
                x:Name="toggleButton"
                Grid.ColumnSpan="2"
                BorderThickness="{TemplateBinding BorderThickness}"
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{DynamicResource SortButtonTemplate}">
                <ToggleButton.Tag>
                    <x:Array Type="DrawingImage">
                        <DrawingImage Drawing="{StaticResource ChevronDownVector}" />
                        <DrawingImage Drawing="{StaticResource ChevronUpVector}" />
                    </x:Array>
                </ToggleButton.Tag>
            </ToggleButton>
            <ContentPresenter
                x:Name="contentPresenter"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="Center"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="false"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                TextElement.FontFamily="{StaticResource Lato}"
                TextElement.FontSize="14"
                TextElement.FontWeight="Regular"
                TextElement.Foreground="{StaticResource ForegroundShade}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                <Setter TargetName="shadow" Property="Margin" Value="8,0,8,8" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SortButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClickMode" Value="Release" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Glow"
                        Margin="-4"
                        BorderThickness="4"
                        CornerRadius="14">
                        <Border
                            x:Name="Stroke"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="{TemplateBinding Padding}"
                            Background="{StaticResource MenuShade}"
                            BorderBrush="{StaticResource MenuShade}"
                            BorderThickness="1.5"
                            CornerRadius="12"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="8" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Column="0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    Content="{Binding Path=SelectedItem.Name, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextElement.FontFamily="{StaticResource Lato}"
                                    TextElement.FontSize="14"
                                    TextElement.FontWeight="Regular"
                                    TextElement.Foreground="{StaticResource ForegroundShade}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}" />
                                <Image
                                    x:Name="Icon"
                                    Grid.Column="2"
                                    Width="10"
                                    Height="10"
                                    Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Source" Value="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Glow" Property="BorderBrush" Value="{StaticResource SecondaryShade}" />
                            <Setter TargetName="Stroke" Property="Background" Value="{StaticResource Primary}" />
                            <Setter TargetName="Stroke" Property="BorderBrush" Value="{StaticResource Secondary}" />
                            <Setter TargetName="Content" Property="Content" Value="{Binding Path=SelectedItem.Name, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{StaticResource Secondary}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="{x:Null}">
                            <Setter TargetName="Content" Property="Content" Value="Sort by" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SortItemTemplate" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{StaticResource Primary}" />
        <Setter Property="FontFamily" Value="{StaticResource Lato}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundShade}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="8"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="8" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image
                                x:Name="Icon"
                                Grid.Column="0"
                                Width="16"
                                Height="16"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Source="{Binding Icon[0]}" />
                            <ContentPresenter
                                x:Name="Content"
                                Grid.Column="2"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComboBoxItem.IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryShade}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{StaticResource Secondary}" />
                        </Trigger>
                        <Trigger Property="ComboBoxItem.IsSelected" Value="True">
                            <Setter Property="Cursor" Value="Arrow" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Primary}" />
                            <Setter TargetName="Content" Property="TextElement.Foreground" Value="{StaticResource Secondary}" />
                            <Setter TargetName="Icon" Property="Source" Value="{Binding Icon[1]}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->


</ResourceDictionary>