// <auto-generated />
using System;
using Expensier.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Expensier.EntityFramework.Migrations
{
    [DbContext(typeof(ExpensierDbContext))]
    [Migration("20240316091404_SubscriptionTableUpdates")]
    partial class SubscriptionTableUpdates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Expensier.Domain.Models.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountHolderID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AccountHolderID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Expensier.Domain.Models.CryptoAsset", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountHolderID")
                        .HasColumnType("TEXT");

                    b.Property<double>("Coins")
                        .HasColumnType("REAL");

                    b.Property<double>("PurchasePrice")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("AccountHolderID");

                    b.ToTable("CryptoAssets");
                });

            modelBuilder.Entity("Expensier.Domain.Models.PortfolioReturn", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountHolderID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordedDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("ReturnPercentage")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("AccountHolderID");

                    b.ToTable("PortfolioReturns");
                });

            modelBuilder.Entity("Expensier.Domain.Models.Subscription", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Expensier.Domain.Models.Transaction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ProcessedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Expensier.Domain.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Expensier.Domain.Models.Account", b =>
                {
                    b.HasOne("Expensier.Domain.Models.User", "AccountHolder")
                        .WithMany()
                        .HasForeignKey("AccountHolderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountHolder");
                });

            modelBuilder.Entity("Expensier.Domain.Models.CryptoAsset", b =>
                {
                    b.HasOne("Expensier.Domain.Models.Account", "AccountHolder")
                        .WithMany("CryptoAssetList")
                        .HasForeignKey("AccountHolderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Expensier.Domain.Models.Crypto", "Asset", b1 =>
                        {
                            b1.Property<Guid>("CryptoAssetID")
                                .HasColumnType("TEXT");

                            b1.Property<double?>("ChangesPercentage")
                                .HasColumnType("REAL");

                            b1.Property<string>("Name")
                                .HasColumnType("TEXT");

                            b1.Property<double?>("Price")
                                .HasColumnType("REAL");

                            b1.Property<string>("Symbol")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("CryptoAssetID");

                            b1.ToTable("CryptoAssets");

                            b1.WithOwner()
                                .HasForeignKey("CryptoAssetID");
                        });

                    b.Navigation("AccountHolder");

                    b.Navigation("Asset")
                        .IsRequired();
                });

            modelBuilder.Entity("Expensier.Domain.Models.PortfolioReturn", b =>
                {
                    b.HasOne("Expensier.Domain.Models.Account", "AccountHolder")
                        .WithMany("PortfolioReturn")
                        .HasForeignKey("AccountHolderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountHolder");
                });

            modelBuilder.Entity("Expensier.Domain.Models.Subscription", b =>
                {
                    b.HasOne("Expensier.Domain.Models.Account", "User")
                        .WithMany("SubscriptionList")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Expensier.Domain.Models.Transaction", b =>
                {
                    b.HasOne("Expensier.Domain.Models.Account", "User")
                        .WithMany("TransactionList")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Expensier.Domain.Models.Account", b =>
                {
                    b.Navigation("CryptoAssetList");

                    b.Navigation("PortfolioReturn");

                    b.Navigation("SubscriptionList");

                    b.Navigation("TransactionList");
                });
#pragma warning restore 612, 618
        }
    }
}
